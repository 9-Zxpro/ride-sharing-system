#spring:
#  config:
#    import: configserver:http://localhost:8080
server:
  port: 8085
spring:
  application:
    name: ride-management-service
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    template:
      exchange: ride-exchange
  datasource:
    url: jdbc:postgresql://localhost:5432/ride_management
    username: postgres
    password: patelji
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  redis:
    host: redis-11264.c301.ap-south-1-1.ec2.redns.redis-cloud.com
    port: 11264
    username: default
    password: onCEbasnaGQXkTPijSCW0CIa9CZ3ux1Q
    ssl: true

google:
  maps:
    api-key: AIzaSyBtNKGaAPNF4Aq7p1SyR9YEVKTFy4LapiI
    endpoints:
      distance-matrix: https://maps.googleapis.com/maps/api/distancematrix/json
      directions: https://maps.googleapis.com/maps/api/directions/json
      geocoding: https://maps.googleapis.com/maps/api/geocode/json

ride-booking-request:
  exchange: ride.booking.request.exchange
  queue: ride.booking.request.queue
  routing-key: ride.booking.request.key

ride-offer:
  exchange: ride.offer.exchange
  queue: ride.offer.queue
  routing-key: ride.offer.key

found-captain:
  exchange: ride.matching.captain.exchange
  queue: ride.matching.captain.queue
  routing-key: ride.matching.captain.key

ride-cache-prefix: "ride:"